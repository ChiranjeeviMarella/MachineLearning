                                                                                                                                                                                                        
>> v = zeros(10,1)
v =

   0
   0
   0
   0
   0
   0
   0
   0
   0
   0

>> for i=1:10, v(i) = 2^i; end;
>> v
v =

      2
      4
      8
     16
     32
     64
    128
    256
    512
   1024

>> indices = 1:10
indices =

    1    2    3    4    5    6    7    8    9   10

>> for i=indices,
       disp(i);
end;
 1
 2
 3
 4
 5
 6
 7
 8
 9
 10
>>

>> v
v =

    100
      4
      8
     16
     32
     64
    128
    256
    512
   1024

>> i=1;
>> while i<5,
     v(i) = 200;
     i = i+1;
   end;
>> v
v =

    200
    200
    200
    200
     32
     64
    128
    256
    512
   1024


>> i=1;
>> while true,
    v(i)=999;
    i=i+1;
    if i==6
      break;
    end;
end;
>> v
v =

    999
    999
    999
    999
    999
     64
    128
    256
    512
   1024

>> v(1)
ans =  999
>> v(1)=2
v =

      2
    999
    999
    999
    999
     64
    128
    256
    512
   1024

>> if v(1) == 1,
     disp('The value is one');
   elseif v(1) == 2,
     disp('The value is two');
   else
     disp('The value is not one or two');
  end;
The value is two


------> How to set the search path for Octave (Advanced/optional)

addpath('C:\Users\SathyaChiranjeevi\Desktop')



>> addpath('C:\Users\cxm8426\Documents\CM\Personal\Machine_Learning\MachineLearning\Week2\Examples');
>> squareThisNumber(10);
>> squareThisNumber(10)
ans =  100
>>


>> [a,b] = squareAndCubeThisNumber(10);
>> a
a =  100
>> b
b =  1000
>>

-------> Cost Function

>> X = [1 1; 1 2; 1 3];
>> y=[1;2;3];
>> theta = [0:1]
theta =

   0   1

>> theta = [0;1]
theta =

   0
   1

>> c = costFunction(X,y,theta)
c = 0
>> theta=[0:0.5]
theta = 0
>> theta=[0;0.5]
theta =

   0.00000
   0.50000

>> c = costFunction(X,y,theta)
c =  0.58333
>>
